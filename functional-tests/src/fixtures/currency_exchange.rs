use std::collections::HashMap;

pub type ExchangeRates = HashMap<String, f64>;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct CurrencyExchangeData(pub HashMap<String, ExchangeRates>);

pub const CURRENCY_EXCHANGE_DATA: &'static str = r#"{"BTC":{"BTC":1,"ETH":0.03125308,"EUR":0.00032189359069340675,"RUB":0.0000043859649122807014,"STQ":1e-7,"USD":0.0002915451895043732},"ETH":{"BTC":31.86540054808489,"ETH":1,"EUR":0.010283658265572796,"RUB":0.00014027212792818068,"STQ":0.0000032772323515661525,"USD":0.009324483793737874},"EUR":{"BTC":3091.01545511,"ETH":96.80517305,"EUR":1,"STQ":0.000316,"USD":0.90131254},"RUB":{"BTC":227401.13700264,"ETH":7100.28408493,"RUB":1,"STQ":0.022813,"USD":64.75},"STQ":{"BTC":9090909.090909092,"ETH":305135.5206847361,"EUR":3021.1480362537764,"RUB":42.58037044922291,"STQ":1,"USD":2725.166916473634},"USD":{"BTC":3419.98277928,"ETH":106.95,"EUR":1.1043704998696733,"RUB":0.015384615386982249,"STQ":0.0003505,"USD":1}}"#;

impl Default for CurrencyExchangeData {
    fn default() -> Self {
        // Implied that `CURRENCY_EXCHANGE_DATA` is guaranteed to be correct.
        serde_json::from_str(CURRENCY_EXCHANGE_DATA).unwrap()
    }
}
